// Generated by CoffeeScript 1.3.3
/*
@author PyYoshi
*/

var TwitterBase, TwitterWeb;

TwitterBase = (function() {

  function TwitterBase() {}

  LOGD();

  return TwitterBase;

})();

TwitterWeb = (function() {

  function TwitterWeb(twitterHtml, login, authToken, ssl) {
    if (twitterHtml == null) {
      twitterHtml = null;
    }
    if (login == null) {
      login = false;
    }
    if (authToken == null) {
      authToken = null;
    }
    if (ssl == null) {
      ssl = true;
    }
    if (ssl === true) {
      this.scheme = 'https';
    } else {
      this.scheme = 'http';
    }
    this.twitterHtmlDiv = document.createElement('div');
    if (twitterHtml === null) {
      this.twitterHtmlDiv.innerHTML = '';
      this.login = login;
      this.authToken = authToken;
    } else {
      this.twitterHtmlDiv.innerHTML = twitterHtml;
      this.login = this.isLogin();
      this.authToken = this.getAuthToken();
    }
  }

  TwitterWeb.prototype.isLogin = function() {
    var passwordElementLength, usernameEmailElementLength;
    LOGD(this.twitterHtmlDiv);
    usernameEmailElementLength = document.evaluate('.//input[@id="username_or_email"]', this.twitterHtmlDiv, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null).snapshotLength;
    passwordElementLength = document.evaluate('.//input[@id="password"]', this.twitterHtmlDiv, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null).snapshotLength;
    LOGD("usernameEmailElementLength: " + usernameEmailElementLength);
    LOGD("passwordElementLength: " + passwordElementLength);
    if (usernameEmailElementLength === 0 && passwordElementLength === 0) {
      return true;
    }
    return false;
  };

  TwitterWeb.prototype.getAuthToken = function() {
    var authToken;
    LOGD(this.twitterHtmlDiv);
    authToken = document.evaluate('.//input[@name="authenticity_token"]', this.twitterHtmlDiv, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null).snapshotItem(0).value;
    LOGD('authToken: ' + authToken);
    return authToken;
  };

  TwitterWeb.prototype.update = function(msg, beforeSendHandler, successHandler, errorHandler) {
    var postApiUrl, prepareData;
    if (msg == null) {
      msg = null;
    }
    if (beforeSendHandler == null) {
      beforeSendHandler = null;
    }
    if (successHandler == null) {
      successHandler = null;
    }
    if (errorHandler == null) {
      errorHandler = null;
    }
    postApiUrl = this.scheme + '://twitter.com/status/update';
    prepareData = {
      authenticity_token: this.authToken,
      status: msg
    };
    return $.ajax(postApiUrl, {
      type: 'POST',
      dataType: 'json',
      data: prepareData,
      beforeSend: function(jqXHR, settings) {
        return beforeSendHandler(jqXHR, settings);
      },
      error: function(jqXHR, textStatus, errorThrown) {
        return errorHandler(jqXHR, textStatus, errorThrown);
      },
      success: function(data, textStatus, jqXHR) {
        return successHandler(data, textStatus, jqXHR);
      }
    });
  };

  return TwitterWeb;

})();
