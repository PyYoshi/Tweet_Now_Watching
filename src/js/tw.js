// Generated by CoffeeScript 1.7.1

/*
@author PyYoshi
 */
var TwitterWeb;

TwitterWeb = (function() {
  function TwitterWeb(twitterHtml, login, authToken, screenName, ssl) {
    if (twitterHtml == null) {
      twitterHtml = null;
    }
    if (login == null) {
      login = false;
    }
    if (authToken == null) {
      authToken = null;
    }
    if (screenName == null) {
      screenName = null;
    }
    if (ssl == null) {
      ssl = true;
    }
    if (ssl === true) {
      this.scheme = 'https';
    } else {
      this.scheme = 'http';
    }
    this.twitterHtmlDiv = document.createElement('div');
    if (twitterHtml === null) {
      this.twitterHtmlDiv.innerHTML = '';
      this.login = login;
      this.authToken = authToken;
      this.screenName = screenName;
    } else {
      this.twitterHtmlDiv.innerHTML = twitterHtml;
      this.login = this.isLogin();
      if (this.login) {
        this.authToken = this.getAuthToken();
        this.screenName = this.getUserScreenName();
      } else {
        this.authToken = null;
        this.screenName = null;
      }
    }
    return;
  }

  TwitterWeb.prototype.isLogin = function() {
    var passwordElementLength, usernameEmailElementLength;
    usernameEmailElementLength = document.evaluate('.//input[@id="username_or_email"]', this.twitterHtmlDiv, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null).snapshotLength;
    passwordElementLength = document.evaluate('.//input[@id="password"]', this.twitterHtmlDiv, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null).snapshotLength;
    LOGD("usernameEmailElementLength: " + usernameEmailElementLength);
    LOGD("passwordElementLength: " + passwordElementLength);
    if (usernameEmailElementLength === 0 && passwordElementLength === 0) {
      return true;
    }
    return false;
  };

  TwitterWeb.prototype.getAuthToken = function() {
    var authToken;
    authToken = document.evaluate('.//input[@name="authenticity_token"]', this.twitterHtmlDiv, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null).snapshotItem(0).value;
    LOGD('authToken: ' + authToken);
    return authToken;
  };

  TwitterWeb.prototype.getUserScreenName = function() {
    var screenName;
    screenName = document.evaluate('.//h2[@class="current-user"]/a/span[@class="name"]', this.twitterHtmlDiv, null, XPathResult.STRING_TYPE, null).stringValue;
    LOGD('screenName: ' + screenName);
    return screenName;
  };

  TwitterWeb.prototype.update = function(msg, beforeSendHandler, successHandler, errorHandler) {
    var postApiUrl, prepareData;
    if (msg == null) {
      msg = null;
    }
    if (beforeSendHandler == null) {
      beforeSendHandler = null;
    }
    if (successHandler == null) {
      successHandler = null;
    }
    if (errorHandler == null) {
      errorHandler = null;
    }
    postApiUrl = this.scheme + '://twitter.com/intent/tweet/update';
    prepareData = {
      authenticity_token: this.authToken,
      status: msg
    };
    return $.ajax(postApiUrl, {
      type: 'POST',
      dataType: 'json',
      data: prepareData,
      beforeSend: function(jqXHR, settings) {
        beforeSendHandler(jqXHR, settings);
      },
      error: function(jqXHR, textStatus, errorThrown) {
        errorHandler(jqXHR, textStatus, errorThrown);
      },
      success: function(data, textStatus, jqXHR) {
        successHandler(data, textStatus, jqXHR);
      }
    });
  };

  return TwitterWeb;

})();
