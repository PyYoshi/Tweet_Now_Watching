// Generated by CoffeeScript 1.7.1

/*
@author PyYoshi
 */

/*
入力された文字数のチェックを行う関数
 */
var countMsg, getQueryStringHash, updateMsgPassing;

countMsg = function() {
  var count, len, txt;
  txt = $('#text').val();
  len = txt.length;
  count = MaxMsgLength - (len + ReservedMsgLength);
  $('#char-count').text(count);
  if (count < 0) {
    LOGD('文字数オーバー');
    $('#logo').text('Your tweet was over 140!');
    $('.headder').css('background', '-webkit-gradient(linear,left top,left bottom,from(#cc0000),to(#ff3300))');
    $('span#logo').css('color', '#FFFFFF');
    $('#post_button').attr("disabled", "disabled").css('background', '');
  } else {
    LOGD('文字数オーバーしていません');
    $('#logo').text(AppName);
    $('.headder').css('background', '-webkit-gradient(linear,left top,left bottom,from(#eaf4ff),to(#ffffff))');
    $('span#logo').css('color', '#999999');
    $('#post_button').removeAttr("disabled").css('background', '#DDD url(./media/bg-btn.gif) repeat-x 0 0');
  }
};


/*
バッググラウンドへ投稿するメッセージを送信する関数

@param msg {String} 投稿するメッセージ
 */

updateMsgPassing = function(msg) {
  var sendObject;
  if (msg == null) {
    msg = null;
  }
  sendObject = {
    msg: msg,
    sendCode: 'updateStatus'
  };
  chrome.extension.sendMessage(sendObject, function(response) {
    LOGD('バッググランドへメッセージを投稿するように命令しました。');
    LOGD(response);
  });
};


/*
現在のロケーションからクエリーを取得する関数

@return {Object}
 */

getQueryStringHash = function() {
  var hash, hashes, queries, query, startIndex, _i, _len;
  hashes = {};
  startIndex = window.location.href.indexOf('?');
  if (startIndex === -1) {
    return {};
  }
  queries = window.location.href.slice(startIndex + 1).split('&');
  LOGD(queries);
  for (_i = 0, _len = queries.length; _i < _len; _i++) {
    query = queries[_i];
    hash = query.split('=');
    hashes["" + hash[0]] = decodeURIComponent(hash[1]);
  }
  LOGD(hashes);
  return hashes;
};

$(function() {
  var PostHeader, PostHeaderSplitter, StatusUrlSplitter, bg, logined, qhash;
  PostHeader = getLocalStorage(PostHeaderKey, DefaultPostHeader);
  PostHeaderSplitter = getLocalStorage(PostHeaderSplitterKey, DefaultPostHeaderSplitter);
  StatusUrlSplitter = getLocalStorage(StatusUrlSplitterKey, DefaultStatusUrlSplitter);
  qhash = getQueryStringHash();
  bg = chrome.extension.getBackgroundPage();
  $('#text').focus();
  $('#text').bind('keyup change paste', function() {
    countMsg();
  });
  logined = bg.isLogin();
  if (logined) {
    LOGD('ログインしています。');
    chrome.tabs.getSelected(null, function(tab) {
      var preUpdateStatus, url;
      if (qhash.status && qhash.url) {
        preUpdateStatus = qhash.status;
        url = qhash.url;
      } else {
        preUpdateStatus = genStatusMsg(PostHeader, PostHeaderSplitter, tab.title, StatusUrlSplitter);
        url = tab.url;
      }
      $('#text').val(preUpdateStatus);
      $('#url').val(url);
      countMsg();
      $('#post_button').click(function() {
        var status;
        countMsg();
        LOGD(status);
        status = $('#text').val() + $('#url').val();
        if ($('#create_tab_and_post').is(':checked')) {
          chrome.tabs.create({
            url: 'https://twitter.com/intent/tweet?source=webclient&text=' + encodeURIComponent(status)
          });
        } else {
          updateMsgPassing(status);
          window.close();
        }
      });
      $('body').keypress(function(event) {
        LOGD(event);
        if (event.ctrlKey && (event.keyCode === 13 || event.keyCode === 10)) {
          LOGD('Ctrl+Enterが押されました');
          $('#post_button').trigger('click');
        }
      });
    });
  } else if (logined === false) {
    LOGD('ログインしていません。');
    chrome.tabs.create({
      'url': TwitterLoginUrl
    });
    window.close();
  } else {
    LOGD('何らかのエラー。');
    window.close();
  }
  LOGD(getQueryStringHash());
});

//# sourceMappingURL=main.map
